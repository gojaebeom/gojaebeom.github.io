{"version":3,"file":"component---src-pages-index-tsx-e8e2adf79e9de1ce9ed7.js","mappings":"8LAKe,SAASA,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,GAA8CC,EAAAA,EAAAA,WAAS,GAAhDC,EAAP,KAAwBC,EAAxB,KAUA,OATAC,EAAAA,EAAAA,YAAU,WACJC,EAAAA,GACF,sDAA0BC,MAAK,aAC7BC,EADiD,EAAjBA,cAEhCJ,GAAmB,QAGtB,IAGDK,EAAAA,cAACC,EAAAA,GAAD,KACED,EAAAA,cAACE,EAAAA,GAAD,CAAcC,MAAM,UAClBT,GACAM,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,iGAAf,aAIFJ,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,yBACZZ,EAAKa,OAAOC,MAAMC,KAAI,SAAAC,GACrB,OACER,EAAAA,cAACS,EAAAA,KAAD,CAAMC,GAAE,SAAWF,EAAKG,YAAYC,KAAQC,IAAKL,EAAKM,IACpDd,EAAAA,cAAAA,UAAAA,CAASI,UAAU,gEACjBJ,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,qCACbJ,EAAAA,cAAAA,MAAAA,CAAKe,IAAKP,EAAKG,YAAYK,UAAWC,QAAQ,UAEhDjB,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,OACbJ,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,sBACbJ,EAAAA,cAAAA,IAAAA,CAAGI,UAAU,2BACbJ,EAAAA,cAAAA,OAAAA,CAAMI,UAAU,eAAeI,EAAKG,YAAYO,OAElDlB,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,mCACZI,EAAKG,YAAYR,OAEpBH,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,sBACZI,EAAKG,YAAYQ,SAEpBnB,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,gCACbJ,EAAAA,cAAAA,OAAAA,CAAMI,UAAU,wFACdJ,EAAAA,cAAAA,IAAAA,CAAGI,UAAU,+BACbJ,EAAAA,cAAAA,OAAAA,KAAOQ,EAAKG,YAAYS","sources":["webpack://jb-log/./src/pages/index.tsx"],"sourcesContent":["import { graphql, Link, useStaticQuery } from \"gatsby\"\nimport React, { useEffect, useState } from \"react\"\nimport { LayoutComponent, SeoComponent } from \"../components\"\nimport { isBrowser } from \"../utils/isBrower\"\n\nexport default function HomePage({ data }) {\n  const [contentIsLoaded, setContentIsLoaded] = useState(false)\n  useEffect(() => {\n    if (isBrowser) {\n      import(\"../utils/images\").then(({ imgProcess }) => {\n        imgProcess()\n        setContentIsLoaded(true)\n      })\n    }\n  }, [])\n\n  return (\n    <LayoutComponent>\n      <SeoComponent title=\"blog\" />\n      {!contentIsLoaded && (\n        <div className=\"fixed top-0 left-0 flex items-center justify-center w-full h-full bg-gray-800 font-jetbrain-b\">\n          ..loading\n        </div>\n      )}\n      <div className=\"w-full masonry-layout\">\n        {data.allMdx.nodes.map(node => {\n          return (\n            <Link to={`/blog/${node.frontmatter.slug}`} key={node.id}>\n              <article className=\"w-1/2 md:w-[33%] lg:w-[25%] xl:w-[20%] p-2 masonry-item mb-4\">\n                <div className=\"w-full overflow-hidden rounded-xl\">\n                  <img src={node.frontmatter.thumbnail} loading=\"lazy\" />\n                </div>\n                <div className=\"p-2\">\n                  <div className=\"text-sm lg:text-md\">\n                    <i className=\"mr-1 fa-light fa-timer\"></i>\n                    <span className=\"font-noto-l\">{node.frontmatter.date}</span>\n                  </div>\n                  <div className=\"text-lg lg:text-xl font-noto-b2\">\n                    {node.frontmatter.title}\n                  </div>\n                  <div className=\"text-xs lg:text-sm\">\n                    {node.frontmatter.excerpt}\n                  </div>\n                  <div className=\"flex flex-wrap justify-start\">\n                    <span className=\"flex items-center justify-center text-xs font-jetbrain-l font-semibold text-blue-500\">\n                      <i className=\"fa-light fa-hashtag mr-0.5\"></i>\n                      <span>{node.frontmatter.category}</span>\n                    </span>\n                  </div>\n                </div>\n              </article>\n            </Link>\n          )\n        })}\n      </div>\n    </LayoutComponent>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n      nodes {\n        id\n        frontmatter {\n          slug\n          title\n          date(formatString: \"MMMM D, YYYY\")\n          excerpt\n          thumbnail\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["HomePage","data","useState","contentIsLoaded","setContentIsLoaded","useEffect","isBrowser","then","imgProcess","React","LayoutComponent","SeoComponent","title","className","allMdx","nodes","map","node","Link","to","frontmatter","slug","key","id","src","thumbnail","loading","date","excerpt","category"],"sourceRoot":""}