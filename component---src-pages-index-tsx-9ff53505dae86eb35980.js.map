{"version":3,"file":"component---src-pages-index-tsx-9ff53505dae86eb35980.js","mappings":"8LAKe,SAASA,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,GAA8CC,EAAAA,EAAAA,WAAS,GAAhDC,EAAP,KAAwBC,EAAxB,KAGA,GAAIC,EAAAA,EAAW,CACb,IAAMC,EAAcC,OAAOC,SAASC,KAAKC,MAAM,cAAc,QACzCC,IAAhBL,IACFM,QAAQC,MAAMP,GACLA,GAYb,OATAQ,EAAAA,EAAAA,YAAU,WACJT,EAAAA,GACF,sDAA0BU,MAAK,aAC7BC,EADiD,EAAjBA,cAEhCZ,GAAmB,QAGtB,IAGDa,EAAAA,cAACC,EAAAA,GAAD,KACED,EAAAA,cAACE,EAAAA,GAAD,CAAcC,MAAM,UAClBjB,GACAc,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,iGAAf,aAIFJ,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,yBACZpB,EAAKqB,OAAOC,MAAMC,KAAI,SAAAC,GACrB,OACER,EAAAA,cAAAA,UAAAA,CACEI,UAAU,+DACVK,IAAKD,EAAKE,IAEVV,EAAAA,cAACW,EAAAA,KAAD,CACEC,GAAE,SAAWJ,EAAKK,YAAYC,KAC9BV,UAAU,sEAEVJ,EAAAA,cAAAA,MAAAA,CAAKe,IAAKP,EAAKK,YAAYG,UAAWC,QAAQ,UAEhDjB,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,OACbJ,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,sBACbJ,EAAAA,cAAAA,IAAAA,CAAGI,UAAU,2BACbJ,EAAAA,cAAAA,OAAAA,CAAMI,UAAU,eAAeI,EAAKK,YAAYK,OAElDlB,EAAAA,cAACW,EAAAA,KAAD,CACEC,GAAE,SAAWJ,EAAKK,YAAYC,KAC9BV,UAAU,mCAETI,EAAKK,YAAYV,OAEpBH,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,sBACZI,EAAKK,YAAYM,SAEpBnB,EAAAA,cAAAA,MAAAA,CAAKI,UAAU,gCACbJ,EAAAA,cAACW,EAAAA,KAAD,CACEC,GAAE,cAAgBJ,EAAKK,YAAYO,SACnChB,UAAU,wFAEVJ,EAAAA,cAAAA,IAAAA,CAAGI,UAAU,+BACbJ,EAAAA,cAAAA,OAAAA,KAAOQ,EAAKK,YAAYO","sources":["webpack://jb-log/./src/pages/index.tsx"],"sourcesContent":["import { graphql, Link, useStaticQuery } from \"gatsby\"\nimport React, { useEffect, useState } from \"react\"\nimport { LayoutComponent, SeoComponent } from \"../components\"\nimport { isBrowser } from \"../utils/isBrower\"\n\nexport default function HomePage({ data }) {\n  const [contentIsLoaded, setContentIsLoaded] = useState(false)\n\n  let filter = \"\"\n  if (isBrowser) {\n    const queryString = window.location.href.split(\"?category=\")[1]\n    if (queryString !== undefined) {\n      console.debug(queryString)\n      filter = queryString\n    }\n  }\n  useEffect(() => {\n    if (isBrowser) {\n      import(\"../utils/images\").then(({ imgProcess }) => {\n        imgProcess()\n        setContentIsLoaded(true)\n      })\n    }\n  }, [])\n\n  return (\n    <LayoutComponent>\n      <SeoComponent title=\"blog\" />\n      {!contentIsLoaded && (\n        <div className=\"fixed top-0 left-0 flex items-center justify-center w-full h-full bg-gray-800 font-jetbrain-b\">\n          ..loading\n        </div>\n      )}\n      <div className=\"w-full masonry-layout\">\n        {data.allMdx.nodes.map(node => {\n          return (\n            <article\n              className=\"w-1/2 md:w-[33%] lg:w-[25%] xl:w-[20%] p-2 masonry-item mb-4\"\n              key={node.id}\n            >\n              <Link\n                to={`/blog/${node.frontmatter.slug}`}\n                className=\"flex justify-center items-center w-full overflow-hidden rounded-xl\"\n              >\n                <img src={node.frontmatter.thumbnail} loading=\"lazy\" />\n              </Link>\n              <div className=\"p-2\">\n                <div className=\"text-sm lg:text-md\">\n                  <i className=\"mr-1 fa-light fa-timer\"></i>\n                  <span className=\"font-noto-l\">{node.frontmatter.date}</span>\n                </div>\n                <Link\n                  to={`/blog/${node.frontmatter.slug}`}\n                  className=\"text-lg lg:text-xl font-noto-b2\"\n                >\n                  {node.frontmatter.title}\n                </Link>\n                <div className=\"text-xs lg:text-sm\">\n                  {node.frontmatter.excerpt}\n                </div>\n                <div className=\"flex flex-wrap justify-start\">\n                  <Link\n                    to={`/?category=${node.frontmatter.category}`}\n                    className=\"flex items-center justify-center text-xs font-jetbrain-l font-semibold text-blue-500\"\n                  >\n                    <i className=\"fa-light fa-hashtag mr-0.5\"></i>\n                    <span>{node.frontmatter.category}</span>\n                  </Link>\n                </div>\n              </div>\n            </article>\n          )\n        })}\n      </div>\n    </LayoutComponent>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n      nodes {\n        id\n        frontmatter {\n          slug\n          title\n          date(formatString: \"MMMM D, YYYY\")\n          excerpt\n          thumbnail\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["HomePage","data","useState","contentIsLoaded","setContentIsLoaded","isBrowser","queryString","window","location","href","split","undefined","console","debug","useEffect","then","imgProcess","React","LayoutComponent","SeoComponent","title","className","allMdx","nodes","map","node","key","id","Link","to","frontmatter","slug","src","thumbnail","loading","date","excerpt","category"],"sourceRoot":""}