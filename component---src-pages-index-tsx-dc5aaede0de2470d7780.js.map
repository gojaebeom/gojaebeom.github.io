{"version":3,"file":"component---src-pages-index-tsx-dc5aaede0de2470d7780.js","mappings":"6JAIO,SAASA,EAAT,GASG,IARRC,EAQO,EARPA,KACAC,EAOO,EAPPA,IACAC,EAMO,EANPA,UACAC,EAKO,EALPA,KACAC,EAIO,EAJPA,KACAC,EAGO,EAHPA,MACAC,EAEO,EAFPA,QACAC,EACO,EADPA,SAIA,OACEC,EAAAA,cAAAA,UAAAA,CACEC,WAAuB,SAATT,EAJH,yCACC,yCAGH,2BAETQ,EAAAA,cAACE,EAAAA,KAAD,CACEC,GAAIV,EACJQ,UAAU,qFAEVD,EAAAA,cAAAA,MAAAA,CACEI,IAAG,IAAMV,EACTW,QAAQ,OACRJ,UAAU,uCAEZD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,6EACfD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,wHAAf,cAKFD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,sBACbD,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,2BACbD,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,eAAeN,IAEjCK,EAAAA,cAACE,EAAAA,KAAD,CAAMC,GAAE,SAAWP,EAAQK,UAAU,mCAClCJ,GAEHG,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,sBAAsBH,GACrCE,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gCACbD,EAAAA,cAACE,EAAAA,KAAD,CACEC,GAAE,cAAgBJ,EAClBE,UAAU,wFAEVD,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,+BACbD,EAAAA,cAAAA,OAAAA,KAAOD,S,kHC3CJ,SAASO,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACzBC,ECOD,CACLA,cAfoB,SAACC,EAAgBC,EAAwBC,GAC7D,IAAKD,EAAS,OAAOC,EAErB,IAAIC,GAAS,EAQb,OAPAH,EAAKI,SAAQ,SAAAC,GACPA,GACEA,EAAIC,cAAcC,SAASN,EAAQK,iBACrCH,GAAS,MAIXA,EAAeD,OAAnB,IDJMH,cACR,GAA8CS,EAAAA,EAAAA,WAAS,GAAhDC,EAAP,KAAwBC,EAAxB,KAGA,GAAIC,EAAAA,EAAW,CACb,IAAMC,EAAcC,OAAOC,SAASC,KAAKC,MAAM,cAAc,QACzCC,IAAhBL,IACFM,QAAQC,MAAMP,GACLA,GAYb,OATAQ,EAAAA,EAAAA,YAAU,WACJT,EAAAA,GACF,sDAA0BU,MAAK,aAC7BC,EADiD,EAAjBA,cAEhCZ,GAAmB,QAGtB,IAGDnB,EAAAA,cAACgC,EAAAA,GAAD,KACEhC,EAAAA,cAACiC,EAAAA,GAAD,CAAcpC,MAAM,UAClBqB,GACAlB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iGAAf,aAIFD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,yBACZM,EAAK2B,OAAOC,MAAMC,KAAI,SAAAC,GACrB,OAAO7B,EACL,CAAC,IACD,GACAR,EAAAA,cAACT,EAAAA,EAAD,CACEC,KAAK,OACLsB,IAAKuB,EAAKC,GACV7C,IAAG,SAAW4C,EAAKE,YAAY3C,KAC/BF,UAAW2C,EAAKE,YAAY7C,UAC5BC,KAAM0C,EAAKE,YAAY5C,KACvBC,KAAMyC,EAAKE,YAAY3C,KACvBC,MAAOwC,EAAKE,YAAY1C,MACxBC,QAASuC,EAAKE,YAAYzC,QAC1BC,SAAUsC,EAAKE,YAAYxC","sources":["webpack://jb-log/./src/components/card/index.tsx","webpack://jb-log/./src/pages/index.tsx","webpack://jb-log/./src/hooks/useFilter.ts"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { Card } from \"../../types\"\n\nexport function CardComponent({\n  type,\n  url,\n  thumbnail,\n  date,\n  slug,\n  title,\n  excerpt,\n  category,\n}: Card) {\n  const mainUi = \"w-1/2 md:w-[33%] lg:w-[25%] xl:w-[20%]\"\n  const otherUi = \"w-1/2 md:w-1/3 lg:w-full xl:w-1/2 p-2\"\n  return (\n    <article\n      className={`${type === \"main\" ? mainUi : otherUi} p-2 masonry-item mb-4 `}\n    >\n      <Link\n        to={url}\n        className=\"relative flex justify-center items-center w-full overflow-hidden rounded-xl group\"\n      >\n        <img\n          src={`/${thumbnail}`}\n          loading=\"lazy\"\n          className=\"group-hover:scale-125 duration-700\"\n        />\n        <div className=\"absolute left-0 top-0 w-full h-full group-hover:bg-black/50 duration-200\"></div>\n        <div className=\"absolute left-0 top-0 w-full h-full hidden group-hover:flex justify-center items-center font-jetbrain-b duration-500\">\n          view blog\n        </div>\n      </Link>\n\n      <div className=\"p-2\">\n        <div className=\"text-sm lg:text-md\">\n          <i className=\"mr-1 fa-light fa-timer\"></i>\n          <span className=\"font-noto-l\">{date}</span>\n        </div>\n        <Link to={`/blog/${slug}`} className=\"text-lg lg:text-xl font-noto-b2\">\n          {title}\n        </Link>\n        <div className=\"text-xs lg:text-sm\">{excerpt}</div>\n        <div className=\"flex flex-wrap justify-start\">\n          <Link\n            to={`/?category=${category}`}\n            className=\"flex items-center justify-center text-xs font-jetbrain-l font-semibold text-blue-500\"\n          >\n            <i className=\"fa-light fa-hashtag mr-0.5\"></i>\n            <span>{category}</span>\n          </Link>\n        </div>\n      </div>\n    </article>\n  )\n}\n","import { graphql, Link, useStaticQuery } from \"gatsby\"\nimport React, { useEffect, useState } from \"react\"\nimport { LayoutComponent, SeoComponent } from \"../components\"\nimport { CardComponent } from \"../components/card\"\nimport { useFilter } from \"../hooks\"\nimport { isBrowser } from \"../utils/isBrower\"\n\nexport default function HomePage({ data }) {\n  const { drawFilterJsx } = useFilter()\n  const [contentIsLoaded, setContentIsLoaded] = useState(false)\n\n  let filter = \"\"\n  if (isBrowser) {\n    const queryString = window.location.href.split(\"?category=\")[1]\n    if (queryString !== undefined) {\n      console.debug(queryString)\n      filter = queryString\n    }\n  }\n  useEffect(() => {\n    if (isBrowser) {\n      import(\"../utils/images\").then(({ imgProcess }) => {\n        imgProcess()\n        setContentIsLoaded(true)\n      })\n    }\n  }, [])\n\n  return (\n    <LayoutComponent>\n      <SeoComponent title=\"blog\" />\n      {!contentIsLoaded && (\n        <div className=\"fixed top-0 left-0 flex items-center justify-center w-full h-full bg-gray-800 font-jetbrain-b\">\n          ..loading\n        </div>\n      )}\n      <div className=\"w-full masonry-layout\">\n        {data.allMdx.nodes.map(node => {\n          return drawFilterJsx(\n            [\"\"],\n            \"\",\n            <CardComponent\n              type=\"main\"\n              key={node.id}\n              url={`/blog/${node.frontmatter.slug}`}\n              thumbnail={node.frontmatter.thumbnail}\n              date={node.frontmatter.date}\n              slug={node.frontmatter.slug}\n              title={node.frontmatter.title}\n              excerpt={node.frontmatter.excerpt}\n              category={node.frontmatter.category}\n            />\n          )\n        })}\n      </div>\n    </LayoutComponent>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n      nodes {\n        id\n        frontmatter {\n          slug\n          title\n          date(formatString: \"MMMM D, YYYY\")\n          excerpt\n          thumbnail\n          category\n        }\n      }\n    }\n  }\n`\n","export function useFilter() {\r\n  const drawFilterJsx = (keys: string[], keyword: string | null, jsx: any) => {\r\n    if (!keyword) return jsx\r\n\r\n    let result = false\r\n    keys.forEach(key => {\r\n      if (key) {\r\n        if (key.toUpperCase().includes(keyword.toUpperCase())) {\r\n          result = true\r\n        }\r\n      }\r\n    })\r\n    if (result) return jsx\r\n  }\r\n\r\n  return {\r\n    drawFilterJsx,\r\n  }\r\n}\r\n"],"names":["CardComponent","type","url","thumbnail","date","slug","title","excerpt","category","React","className","Link","to","src","loading","HomePage","data","drawFilterJsx","keys","keyword","jsx","result","forEach","key","toUpperCase","includes","useState","contentIsLoaded","setContentIsLoaded","isBrowser","queryString","window","location","href","split","undefined","console","debug","useEffect","then","imgProcess","LayoutComponent","SeoComponent","allMdx","nodes","map","node","id","frontmatter"],"sourceRoot":""}