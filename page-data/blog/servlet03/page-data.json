{"componentChunkName":"component---src-pages-blog-mdx-slug-tsx","path":"/blog/servlet03/","result":{"data":{"mdx":{"frontmatter":{"cover":"servlet/servlet-03-cover.jpeg","title":"Servlet 다루기","date":"September 20, 2019"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"servlet03\",\n  \"title\": \"Servlet 다루기\",\n  \"excerpt\": \"기존의 html 문서만으로는 동적인 내용을 전달할 수 없다. 때문에 WAS(web application server) 에서 동작하는 프로그래밍 언어를 사용하면 가능하다.\",\n  \"date\": \"2019-09-20\",\n  \"cover\": \"servlet/servlet-03-cover.jpeg\",\n  \"thumbnail\": \"servlet/servlet-03-thumbnail.jpeg\",\n  \"category\": \"java/servlet\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAE30\\uC874\\uC758 html \\uBB38\\uC11C\\uB9CC\\uC73C\\uB85C\\uB294 \\uB3D9\\uC801\\uC778 \\uB0B4\\uC6A9\\uC744 \\uC804\\uB2EC\\uD560 \\uC218 \\uC5C6\\uB2E4. --> \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"WAS : web application server\"), \" \\uC5D0\\uC11C \\uB3D9\\uC791\\uD558\\uB294 \\uD504\\uB85C\\uADF8\\uB798\\uBC0D \\uC5B8\\uC5B4\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74 \\uAC00\\uB2A5\\uD558\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uADF8\\uB807\\uAE30\\uC5D0 \\uD574\\uB2F9 Java\\uC5D0\\uC11C \\uC81C\\uACF5\\uD558\\uB294 servlet \\uD074\\uB798\\uC2A4\\uB97C \\uD65C\\uC6A9\\uD558\\uC5EC \\uB3D9\\uC801\\uC778 \\uC6F9 \\uD398\\uC774\\uC9C0\\uB97C \\uC0AC\\uC6A9\\uC790\\uC5D0\\uAC8C \\uBCF4\\uC5EC\\uC904 \\uC218 \\uC788\\uB2E4.\")), mdx(\"h2\", null, \"\\uC11C\\uBE14\\uB9BF \\uB9CC\\uB4E4\\uAE30\"), mdx(\"p\", null, \"\\uC774\\uD074\\uB9BD\\uC2A4\\uC5D0\\uC11C \\uC81C\\uACF5\\uD558\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Dynamic web project\"), \" \\uB97C \\uC0DD\\uC131\\uD558\\uBA74 \\uC27D\\uAC8C servlet \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uAD6C\\uD604\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"src \\uD558\\uC704\\uC5D0 \\uC790\\uBC14 \\uD074\\uB798\\uC2A4 \\uD30C\\uC77C\\uC744 \\uC0DD\\uC131\\uD55C\\uB2E4.(\\uC774\\uB984\\uC740 \\uC0C1\\uAD00 \\uC5C6\\uB2E4)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9CC\\uB4E0 \\uD074\\uB798\\uC2A4\\uC5D0\\uAC8C HttpServlet \\uD074\\uB798\\uC2A4\\uB97C \\uC0C1\\uC18D\\uBC1B\\uAC8C \\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAD6C\\uD604\\uB41C \\uBA54\\uC18C\\uB4DC\\uB4E4 \\uC911 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"service\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"doGet\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"doPost\"), \" \\uB4F1\\uC774 \\uC788\\uB294\\uB370 \\uBA3C\\uC800 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"service\"), \" \\uBA54\\uC18C\\uB4DC\\uB97C \\uC624\\uBC84\\uB77C\\uC774\\uB4DC\\uD574\\uBCF4\\uC790.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"import java.io.IOException;\\nimport java.io.PrintWriter;\\n\\nimport javax.servlet.ServletException;\\nimport javax.servlet.http.HttpServlet;\\nimport javax.servlet.http.HttpServletRequest;\\nimport javax.servlet.http.HttpServletResponse;\\n\\npublic class HelloServlet extends HttpServlet {\\n\\n    @Override\\n    protected void service(HttpServletRequest request, HttpServletResponse response) \\n            throws ServletException, IOException \\n    {\\n        PrintWriter out = response.getWriter();\\n        \\n        out.println(\\\"hello servlet\\\");\\n    }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HttpServlet \\uD074\\uB798\\uC2A4\\uB97C \\uC0C1\\uC18D \\uBC1B\\uC544 servlet \\uAE30\\uB2A5\\uC744 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uC74C\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"service \\uBA54\\uC18C\\uB4DC\\uB294 \\uC785\\uB825\\uB3C4\\uAD6C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HttpServletRequest\"), \"\\uC640 \\uCD9C\\uB825\\uB3C4\\uAD6C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HttpServletResponse\"), \"\\uC744 \\uB9E4\\uAC1C\\uBCC0\\uC218\\uB85C \\uBC1B\\uC544 \\uD65C\\uC6A9 \\uAC00\\uB2A5\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC704\\uC758 \\uCF54\\uB4DC\\uB294 \\uCD9C\\uB825\\uB3C4\\uAD6C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"response\"), \"\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC \\uC0AC\\uC6A9\\uC790\\uC5D0\\uAC8C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hello servlet\"), \" \\uBB38\\uAD6C\\uB97C \\uC751\\uB2F5\\uD558\\uB294 \\uB0B4\\uC6A9\")), mdx(\"h2\", null, \"\\uC11C\\uBE14\\uB9BF mapping\"), mdx(\"p\", null, \"\\uC704\\uC758 \\uD074\\uB798\\uC2A4 \\uD30C\\uC77C\\uC740 \\uBC14\\uB85C \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC5C6\\uB2E4. \\uD1B0\\uCEA3\\uC5D0\\uAC8C web.xml\\uC758 \\uB0B4\\uC6A9\\uC744 \\uD1B5\\uD574 servlet \\uD074\\uB798\\uC2A4\\uB77C\\uB294 \\uAC83\\uC744 \\uBA85\\uC2DC\\uD574 \\uC8FC\\uC5B4\\uC57C \\uD55C\\uB2E4. \\uBA85\\uC2DC\\uD558\\uB294 \\uBC29\\uBC95\\uC740 2\\uAC00\\uC9C0\\uAC00 \\uC788\\uB2E4.\"), mdx(\"h3\", null, \"web.xml \\uC5D0\\uC11C \\uC124\\uC815\\uD574\\uC8FC\\uAE30\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD574\\uB2F9 \\uD504\\uB85C\\uC81D\\uD2B8\\uC758 WebContent\\\\WEB-INF \\uACBD\\uB85C\\uC5D0 web.xml \\uD30C\\uC77C \\uC0DD\\uC131\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E4\\uC74C \\uB0B4\\uC6A9 \\uC801\\uC6A9\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-xml\"\n  }, \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<web-app xmlns=\\\"http://xmlns.jcp.org/xml/ns/javaee\\\"\\n  xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n  xsi:schemaLocation=\\\"http://xmlns.jcp.org/xml/ns/javaee\\n                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\\\"\\n  version=\\\"4.0\\\"\\n  metadata-complete=\\\"true\\\">\\n\\n  <display-name>Welcome to Tomcat</display-name>\\n  <description>\\n     Welcome to Tomcat\\n  </description>\\n  \\n  <!-- servlet mapping! -->\\n  <servlet>\\n    <servlet-name>hello</servlet-name>\\n    <servlet-class>HelloServlet</servlet-class>\\n  </servlet>\\n  <servlet-mapping>\\n     <servlet-name>hello</servlet-name>\\n     <url-pattern>/hello</url-pattern>\\n  </servlet-mapping>\\n\\n</web-app>\\n\")), mdx(\"p\", null, \"\\uD558\\uB2E8\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<!-- servlet mapping! -->\"), \" \\uBD80\\uBD84\\uB9CC \\uC774\\uD574\\uD574\\uBCF4\\uC790.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBA3C\\uC800 servlet \\uD074\\uB798\\uC2A4\\uB97C \\uBA85\\uC2DC\\uD574\\uC8FC\\uB294\\uB370 src \\uD3F4\\uB354\\uC758 \\uD558\\uC704 \\uACBD\\uB85C\\uB97C \\uAE30\\uC900\\uC73C\\uB85C \\uD574\\uB2F9 Servlet \\uD074\\uB798\\uC2A4\\uBA85 \\uC785\\uB825\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0AC\\uC2E4 src \\uD3F4\\uB354\\uC758 \\uACBD\\uB85C\\uB294 \\uC544\\uB2C8\\uB2E4. \\uD504\\uB85C\\uC81D\\uD2B8\\uC758 \\uCD5C\\uC0C1\\uC704 \\uB514\\uB809\\uD1A0\\uB9AC\\uC5D0 \\uAC00\\uBCF4\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"build\"), \"\\uB77C\\uB294 \\uD3F4\\uB354\\uAC00 \\uC788\\uB294\\uB370 \\uD574\\uB2F9 \\uD3F4\\uB354\\uC758 .class \\uD30C\\uC77C\\uC744 \\uCC3E\\uB294 \\uAC83 \\uAC19\\uB2E4.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uADF8\\uB9AC\\uACE0 servlet\\uC774 \\uC774\\uB984\\uC774 hello \\uC778 servlet\\uAC00 \\uC8FC\\uC18C(url) \\uC694\\uCCAD\\uC774 '\\uD504\\uB85C\\uC81D\\uD2B8 \\uC8FC\\uC18C/hello' \\uB85C \\uC624\\uBA74 \\uD574\\uB2F9 \\uC11C\\uBE14\\uB9BF \\uD074\\uB798\\uC2A4\\uB97C \\uC2E4\\uD589\\uD558\\uB77C\\uB294 \\uB0B4\\uC6A9\\uC774\\uB2E4. \")), mdx(\"h3\", null, \"annotaction(@) \\uC0AC\\uC6A9\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC11C\\uBE14\\uB9BF 3.0 \\uBC84\\uC804 \\uC774\\uC0C1\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uAC00\\uB2A5\\uD558\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"web.xml\\uC758 servlet\\uACFC servlet-mapping \\uD0DC\\uADF8\\uAC00 \\uD544\\uC694 \\uC5C6\\uB2E4. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB300\\uC2E0 web.xml\\uC758 root element\\uC778 metadata-complete\\uC758 \\uAC12\\uC744 false\\uB85C \\uBC14\\uAFD4\\uC8FC\\uC5B4\\uC57C \\uD568\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-xml\"\n  }, \"<web-app xmlns=\\\"http://xmlns.jcp.org/xml/ns/javaee\\\"\\n  xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n  xsi:schemaLocation=\\\"http://xmlns.jcp.org/xml/ns/javaee\\n                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\\\"\\n  version=\\\"4.0\\\"\\n  metadata-complete=\\\"false\\\"> <!-- \\uC774\\uBD80\\uBD84 -->\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uADF8\\uB9AC\\uACE0 \\uD574\\uB2F9 \\uC11C\\uBE14\\uB9BF \\uD074\\uB798\\uC2A4 \\uD30C\\uC77C\\uC5D0 \\uC5B4\\uB178\\uD14C\\uC774\\uC158\\uC744 \\uC791\\uC131\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"@WebServlet(\\\"/hello\\\") // <-- \\uB2E4\\uC74C\\uACFC \\uAC19\\uC774 \\uBA85\\uC2DC\\npublic class HelloServlet extends HttpServlet {\\n\\n    @Override\\n    protected void service(HttpServletRequest req, HttpServletResponse res) \\n            throws ServletException, IOException \\n    {\\n        PrintWriter out = res.getWriter();\\n        \\n        out.println(\\\"hello servlet\\\");\\n    }\\n}\\n\")), mdx(\"p\", null, \"\\uC704\\uC640 \\uAC19\\uC774 \\uC791\\uC131\\uD558\\uBA74 web.xml\\uC5D0\\uC11C \\uC124\\uC815\\uD55C \\uAC83\\uACFC \\uAC19\\uC774 \\uC791\\uB3D9\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uC704 \\uC124\\uC815\\uB4E4\\uC774 \\uC644\\uB8CC \\uB418\\uC5C8\\uB2E4\\uBA74 \\uC774\\uD074\\uB9BD\\uC2A4\\uC5D0\\uC11C \\uD1B0\\uCEA3\\uC5D0 \\uD574\\uB2F9\\uD504\\uB85C\\uC81D\\uD2B8\\uB97C \\uC62C\\uB824 \\uC2E4\\uD589\\uD558\\uBA74 \\uC798 \\uC791\\uB3D9\\uD560 \\uAC83\\uC774\\uB2E4.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"allMdx":{"nodes":[{"id":"91d4afc5-b25c-5357-8347-a25bdc65a3f5","frontmatter":{"slug":"servlet11","title":"servlet 복습, 생명주기","date":"October 2, 2019","excerpt":"서블릿 프로그램을 공부하면서 배운 내용들을 정리하려고 한다.","thumbnail":"servlet/servlet-11-thumbnail.jpeg","category":"java/servlet"}},{"id":"5ea46638-5529-5055-a6b4-3c2d440b0b85","frontmatter":{"slug":"servlet10","title":"jsp 프로젝트 만들기 - mvc1, mvc2","date":"October 1, 2019","excerpt":"이전에 만든 `board-detail.jsp`은 DB와 잘 연결되어 화면에 데이터를 잘 출력하는 것을 볼 수 있다. 하지만 jsp 파일 내의 코드를 보면 자바코드와 html코드가 뒤엉켜 있는 것을 볼 수 있다. 이것을 스파게티 코드라 한다.","thumbnail":"servlet/servlet-10-thumbnail.jpeg","category":"java/servlet"}},{"id":"49adcb63-8551-5c19-ba48-b047ccad81ec","frontmatter":{"slug":"servlet09","title":"jsp 프로젝트 만들기 - DB연결","date":"September 30, 2019","excerpt":"JDBC는 자바에서 데이터베이스에 접속할 수 있도록 하는 자바 API이다. JDBC는 데이터베이스에서 자료를 쿼리하거나 업데이트하는 방법을 제공한다.","thumbnail":"servlet/servlet-09-thumbnail.jpeg","category":"java/servlet"}},{"id":"22d4da04-3ba0-5b7d-9d06-082fe9f8ce22","frontmatter":{"slug":"servlet08","title":"jsp 프로젝트 만들기 - 시작","date":"September 29, 2019","excerpt":"본격적으로 jsp를 이용한 servlet 프로젝트를 만들어보겠다. jsp와 servlet의 활용 목적이 주된 내용이기 html/css 는 가급적 손대지 않고 비즈니스 로직에 집중하도록 하겠다.","thumbnail":"servlet/servlet-08-thumbnail.jpeg","category":"java/servlet"}},{"id":"6bf5224d-b4fc-538a-a414-9012059eeb9d","frontmatter":{"slug":"servlet07","title":"Jsp -> Servlet 변환","date":"September 27, 2019","excerpt":"웹 어플리케이션에 배포된 jsp 페이지는 최초 클라이언트 요청이 들어올 때 servlet으로 변환된다.","thumbnail":"servlet/servlet-07-thumbnail.jpeg","category":"java/servlet"}},{"id":"120458f4-dda2-5658-955b-580bb6496ea5","frontmatter":{"slug":"servlet06","title":"jsp 프로그래밍","date":"September 25, 2019","excerpt":"jsp란 `Java Server Pages` 의 약자이며 HTML 코드에 JAVA 코드를 넣어 동적웹페이지를 생성하는 웹어플리케이션 도구이다.","thumbnail":"servlet/servlet-06-thumbnail.jpeg","category":"java/servlet"}},{"id":"ebc7345a-f7c0-5957-bf81-d07055fcbc9c","frontmatter":{"slug":"servlet05","title":"Servlet 상태관리","date":"September 24, 2019","excerpt":"서블릿은 요청이 오면 응답을 주고 메모리에서 사라지기 때문에 서블릿들 간의 연결이 불가능하다.  만약 기존의 데이터를 저장할 일이 생겼다고 하면 서블릿 스스로 저장할 수 있는 것은 아니다. 이것은 ServletContext로 해결할 수 있다.","thumbnail":"servlet/servlet-05-thumbnail.jpeg","category":"java/servlet"}},{"id":"e715f7d8-a3ab-52ab-9898-4453d676f53c","frontmatter":{"slug":"servlet04","title":"한글 인코딩","date":"September 22, 2019","excerpt":"servlet 클래스에서 한글을 출력하면 한글이 깨지는 것을 볼 수 있다. 해당 문제점은 다음과 같이 해결할 수 있다.","thumbnail":"servlet/servlet-04-thumbnail.jpeg","category":"java/servlet"}},{"id":"52ad0750-6672-564f-b34b-6812019a8226","frontmatter":{"slug":"servlet03","title":"Servlet 다루기","date":"September 20, 2019","excerpt":"기존의 html 문서만으로는 동적인 내용을 전달할 수 없다. 때문에 WAS(web application server) 에서 동작하는 프로그래밍 언어를 사용하면 가능하다.","thumbnail":"servlet/servlet-03-thumbnail.jpeg","category":"java/servlet"}},{"id":"eaecd5ee-7719-57f7-a8a2-4f61d577cf75","frontmatter":{"slug":"servlet02","title":"톰캣 사용하기","date":"September 17, 2019","excerpt":"아파치 톰캣은 아파치 소프트웨어 재단에서 개발한 서블릿 컨테이너만 있는 웹 애플리케이션 서버이다.","thumbnail":"servlet/servlet-02-thumbnail.jpeg","category":"java/servlet"}}]}},"pageContext":{"id":"52ad0750-6672-564f-b34b-6812019a8226","slug":"servlet03","__params":{"slug":"servlet03"}}},"staticQueryHashes":["3080673216","4194645075","559926603","63159454"]}