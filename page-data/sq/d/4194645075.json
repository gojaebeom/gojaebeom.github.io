{"data":{"allMdx":{"nodes":[{"id":"91d4afc5-b25c-5357-8347-a25bdc65a3f5","frontmatter":{"slug":"servlet11","title":"servlet 복습, 생명주기","date":"October 2, 2019","excerpt":"서블릿 프로그램을 공부하면서 배운 내용들을 정리하려고 한다.","thumbnail":"servlet/servlet-11-thumbnail.jpeg","category":"java/servlet"}},{"id":"5ea46638-5529-5055-a6b4-3c2d440b0b85","frontmatter":{"slug":"servlet10","title":"jsp 프로젝트 만들기 - mvc1, mvc2","date":"October 1, 2019","excerpt":"이전에 만든 `board-detail.jsp`은 DB와 잘 연결되어 화면에 데이터를 잘 출력하는 것을 볼 수 있다. 하지만 jsp 파일 내의 코드를 보면 자바코드와 html코드가 뒤엉켜 있는 것을 볼 수 있다. 이것을 스파게티 코드라 한다.","thumbnail":"servlet/servlet-10-thumbnail.jpeg","category":"java/servlet"}},{"id":"49adcb63-8551-5c19-ba48-b047ccad81ec","frontmatter":{"slug":"servlet09","title":"jsp 프로젝트 만들기 - DB연결","date":"September 30, 2019","excerpt":"JDBC는 자바에서 데이터베이스에 접속할 수 있도록 하는 자바 API이다. JDBC는 데이터베이스에서 자료를 쿼리하거나 업데이트하는 방법을 제공한다.","thumbnail":"servlet/servlet-09-thumbnail.jpeg","category":"java/servlet"}},{"id":"22d4da04-3ba0-5b7d-9d06-082fe9f8ce22","frontmatter":{"slug":"servlet08","title":"jsp 프로젝트 만들기 - 시작","date":"September 29, 2019","excerpt":"본격적으로 jsp를 이용한 servlet 프로젝트를 만들어보겠다. jsp와 servlet의 활용 목적이 주된 내용이기 html/css 는 가급적 손대지 않고 비즈니스 로직에 집중하도록 하겠다.","thumbnail":"servlet/servlet-08-thumbnail.jpeg","category":"java/servlet"}},{"id":"6bf5224d-b4fc-538a-a414-9012059eeb9d","frontmatter":{"slug":"servlet07","title":"Jsp -> Servlet 변환","date":"September 27, 2019","excerpt":"웹 어플리케이션에 배포된 jsp 페이지는 최초 클라이언트 요청이 들어올 때 servlet으로 변환된다.","thumbnail":"servlet/servlet-07-thumbnail.jpeg","category":"java/servlet"}},{"id":"120458f4-dda2-5658-955b-580bb6496ea5","frontmatter":{"slug":"servlet06","title":"jsp 프로그래밍","date":"September 25, 2019","excerpt":"jsp란 `Java Server Pages` 의 약자이며 HTML 코드에 JAVA 코드를 넣어 동적웹페이지를 생성하는 웹어플리케이션 도구이다.","thumbnail":"servlet/servlet-06-thumbnail.jpeg","category":"java/servlet"}},{"id":"ebc7345a-f7c0-5957-bf81-d07055fcbc9c","frontmatter":{"slug":"servlet05","title":"Servlet 상태관리","date":"September 24, 2019","excerpt":"서블릿은 요청이 오면 응답을 주고 메모리에서 사라지기 때문에 서블릿들 간의 연결이 불가능하다.  만약 기존의 데이터를 저장할 일이 생겼다고 하면 서블릿 스스로 저장할 수 있는 것은 아니다. 이것은 ServletContext로 해결할 수 있다.","thumbnail":"servlet/servlet-05-thumbnail.jpeg","category":"java/servlet"}},{"id":"e715f7d8-a3ab-52ab-9898-4453d676f53c","frontmatter":{"slug":"servlet04","title":"한글 인코딩","date":"September 22, 2019","excerpt":"servlet 클래스에서 한글을 출력하면 한글이 깨지는 것을 볼 수 있다. 해당 문제점은 다음과 같이 해결할 수 있다.","thumbnail":"servlet/servlet-04-thumbnail.jpeg","category":"java/servlet"}},{"id":"52ad0750-6672-564f-b34b-6812019a8226","frontmatter":{"slug":"servlet03","title":"Servlet 다루기","date":"September 20, 2019","excerpt":"기존의 html 문서만으로는 동적인 내용을 전달할 수 없다. 때문에 WAS(web application server) 에서 동작하는 프로그래밍 언어를 사용하면 가능하다.","thumbnail":"servlet/servlet-03-thumbnail.jpeg","category":"java/servlet"}},{"id":"eaecd5ee-7719-57f7-a8a2-4f61d577cf75","frontmatter":{"slug":"servlet02","title":"톰캣 사용하기","date":"September 17, 2019","excerpt":"아파치 톰캣은 아파치 소프트웨어 재단에서 개발한 서블릿 컨테이너만 있는 웹 애플리케이션 서버이다.","thumbnail":"servlet/servlet-02-thumbnail.jpeg","category":"java/servlet"}},{"id":"83e4d1cd-4af0-5622-8598-fe94afdd266b","frontmatter":{"slug":"servlet01","title":"자바 웹 프로그래밍","date":"September 12, 2019","excerpt":"웹 프로그램은 웹을 통하여 사용자와 상호작용을 하는 프로그램이다.","thumbnail":"servlet/servlet-01-thumbnail.png","category":"java/servlet"}},{"id":"f26c9b08-5468-55a8-a415-bfa1b0554148","frontmatter":{"slug":"java24","title":"JAVA - 24. 예외 처리","date":"September 10, 2019","excerpt":"프로그램을 실했할 때 오작동이나 비정상적으로 종료되는 원인을 오류나 에러라고 한다. 에러는 컴파일 에러와 런타임 에러로 나뉜다.","thumbnail":"java/java-24-thumbnail.jpeg","category":"java"}},{"id":"e7a2bbb9-fccb-5903-9bd0-80db342a3ef6","frontmatter":{"slug":"java23","title":"JAVA - 23. 제네릭 타입","date":"September 5, 2019","excerpt":"제네릭은 자바 5 이후에 도입되었다. 제네릭(Generic)은 클래스 내부에서 사용할 데이터 타입을 외부에서 지정하는 기법을 의미한다. 먼저 예제를 보자.","thumbnail":"java/java-23-thumbnail.jpeg","category":"java"}},{"id":"8abce7b5-093f-556c-b558-977cbe44a735","frontmatter":{"slug":"java22","title":"JAVA - 22. String, Wrapper 클래스","date":"September 3, 2019","excerpt":"자바에서 문자열을 사용하기 위해 기본적으로 String 클래스라는 것을 재공한다. 선언 방법은 다음과 같다.","thumbnail":"java/java-22-thumbnail.jpeg","category":"java"}},{"id":"62eb75ac-bcc3-591b-849d-9f1731613b31","frontmatter":{"slug":"java21","title":"JAVA - 21. 객체지향의 특징","date":"September 1, 2019","excerpt":"객체지향은 프로그램 설계방법론중 하나 이다. 프로그램을 수많은 '객체'라는 기본 단위로 나누고 이 객체들의 상호작용으로 서술하는 방식이다. 객체란 하나의 역할을 수행하는 '메소드와 변수(데이터)'의 묶음으로 봐야 한다.","thumbnail":"java/java-21-thumbnail.jpeg","category":"java"}},{"id":"2a3c11b6-9423-5479-9caa-b5bed2f1c14f","frontmatter":{"slug":"java20","title":"JAVA - 20. 추상클래스","date":"August 28, 2019","excerpt":"하나 이상의 추상 메소드를 갖는 클래스를 가리켜 추상 클래스라 한다.","thumbnail":"java/java-20-thumbnail.jpeg","category":"java"}},{"id":"59493acf-22c8-5505-ab34-6fbd30d8e275","frontmatter":{"slug":"java19","title":"JAVA - 19. 인터페이스","date":"August 26, 2019","excerpt":"위의 예제는 인터페이스 선언의 모습이다. 기본 골격은 클래스와 동일하다. 그러나 class 대신 interface라는 키워드를 사용하고, 내부에 있는 메소드는 몸체 없이 세미콜론으로 마무리 된다. 위와 같이 몸체가 비어있는 메소드를 가리켜 **추상 메소드(Abstract Methods)** 라 한다.","thumbnail":"java/java-19-thumbnail.jpeg","category":"java"}},{"id":"0ac6b727-23d9-5b62-a658-fb0a166f6c1b","frontmatter":{"slug":"java18","title":"JAVA - 18. 다형성","date":"August 22, 2019","excerpt":"다형성은 상속과 깊은 관계가 있다. 객체지향개념에서 다형성이란 '여러 가지 형태를 가질 수 있는 능력'을 의미하며, 자바에서는 한 타입의 참조변수로 여러 타입의 객체를 참조할 수 있도록함으로써 다형성을 프로그램적으로 구현하였다.","thumbnail":"java/java-18-thumbnail.jpeg","category":"java"}},{"id":"48aecb31-9bd2-5530-b1a0-e5fede64b36d","frontmatter":{"slug":"java17","title":"JAVA - 17. 메소드 오버라이딩","date":"August 19, 2019","excerpt":"상위 클래스에 정의된 메소드를 하위 클래스에서 다시 정의하는 행위를 가리켜 '메소드 오버라이딩' 이라 하는데, 여기서 말하는 오버라이딩은 '무효화 시키다'의 뜻으로 해석이 된다.","thumbnail":"java/java-17-thumbnail.jpeg","category":"java"}},{"id":"28927edf-0c1a-5d42-8e05-3105ab89eb53","frontmatter":{"slug":"java16","title":"JAVA - 16. 상속","date":"August 16, 2019","excerpt":"상속의 적절한 활용 방법은 한두 문자로 가볍게 설명할 수 있는 내용이 아니다. 그리고 이에 대한 설명을 듣기에 앞서 상속에 대한 문법적인 이해가 선행되어야 한다.","thumbnail":"java/java-16-thumbnail.jpeg","category":"java"}},{"id":"8dff1c04-9e12-520b-94d2-2a36f3fcc578","frontmatter":{"slug":"java15","title":"JAVA - 15. ArrayList","date":"August 12, 2019","excerpt":"ArrayList는 순차적인 여러 값들을 저장하기 위해 자바에서 기본적으로 제공하는 자료구조중 하나이다.","thumbnail":"java/java-15-thumbnail.jpeg","category":"java"}},{"id":"37470bd5-27c5-5292-a493-053e2d1468b4","frontmatter":{"slug":"java14","title":"JAVA - 14. 배열","date":"August 10, 2019","excerpt":"배열은 자료형이 같은 둘 이상의 값을 저장할 수 있는 메모리 공간을 의미한다. 그리고 배열은 그 구조에 따라서 1차원 배열과 2차원 이상의 다차원 배열로 나뉜다.","thumbnail":"java/java-14-thumbnail.jpeg","category":"java"}},{"id":"35624080-c955-5df8-856f-378741b5951e","frontmatter":{"slug":"java13","title":"JAVA - 13. static 응용 - Singleton","date":"July 30, 2019","excerpt":"싱글톤이란 어떤 클래스가 최초 한번만 메모리를 할당하고 그 메모리에 객체를 만들어 사용하는 디자인 패턴을 말한다.","thumbnail":"java/java-13-thumbnail.jpeg","category":"java"}},{"id":"9658c8d8-9250-5414-811b-538416d2090c","frontmatter":{"slug":"java12","title":"JAVA - 12. static 변수와 메소드","date":"July 27, 2019","excerpt":"static 변수는 클래스를 설계할 때, 멤버변수 중 모든 인스턴스에 공통적으로 사용해야하는 것에 static을 붙인다. 인스턴스를 생성하면, 각 인스턴스들은 서로 독립적기 때문에 서로 다른 값을 유지하게된다. 경우에 따라서는 각 인스턴스들이 공통적으로 같은 값이 유지되어야 하는 경우가 있는데 이때 static 변수를 사용하면 된다. 다음 예제를 보자. ","thumbnail":"java/java-12-thumbnail.jpeg","category":"java"}},{"id":"58d52d90-3650-59e3-887b-47647e5a8087","frontmatter":{"slug":"java11","title":"JAVA - 11. this 키워드","date":"July 22, 2019","excerpt":"자바에서 제공하는 this 키워드는 인스턴스 자기 자신를 가리키는 키워드이다. 이 this 키워드를 통해 클래스 메서드 및 생성자에서 자기 자신의 데이터를 업데이트하거나 조작할 수 있다.","thumbnail":"java/java-11-thumbnail.jpeg","category":"java"}},{"id":"27b86b5f-477d-575e-8df7-2c0a6bdb0201","frontmatter":{"slug":"java10","title":"JAVA - 10. 정보 은닉","date":"July 20, 2019","excerpt":"자바에서 말하는 정보는 클래스의 인스턴스 변수를 의미한다. 따라서 정보를 은닉한다는 것은 인스턴스 변수를 숨긴다는 뜻이다. 자바에서는 '접근 제어자'(접근 제한자, 접근 제어 지시자 등 다양하게 불린다)를 통해 접근의 허용 수준을 결정할 때 선언하는 키워드를 제공한다.","thumbnail":"java/java-10-thumbnail.jpeg","category":"java"}},{"id":"92cc8c5a-3e17-5856-a3df-88077a440b22","frontmatter":{"slug":"java09","title":"JAVA - 09. 참조 자료형","date":"July 18, 2019","excerpt":"처음 자바에 대한 글을 작성할때 변수와 자료형에 대해 알아보았다. 그리고 자료형에는 기본 자료형과 참조 자료형이 있다고 하였다. 참조형에 대해선 그 당시에 다루지 않았는데, 참조 자료형은 클래스에 대한 기본적인 지식을 가지고 있어야 이해하기 편하다고 생각하였다.","thumbnail":"java/java-09-thumbnail.jpeg","category":"java"}},{"id":"1e47a170-744a-5001-a633-be97cedeff81","frontmatter":{"slug":"java08","title":"JAVA - 08. 생성자","date":"July 15, 2019","excerpt":"생성자는 클래스명과 동일해야한다. 그리고 반환형도 없고 (이후에 배울)상속되지도 않는다. 생성자는 다음과 같이 선언할 수 있다.","thumbnail":"java/java-08-thumbnail.jpeg","category":"java"}},{"id":"7300e14e-83a7-58db-9c42-fe082f4b7ebc","frontmatter":{"slug":"java07","title":"JAVA - 07. 함수와 메소드","date":"July 10, 2019","excerpt":"프로그래밍에서 함수는 하나의 기능을 수행하는 코드의 단위이다.","thumbnail":"java/java-07-thumbnail.jpg","category":"java"}},{"id":"3b825e66-887e-58ff-9ea5-995f94c46f49","frontmatter":{"slug":"java06","title":"JAVA - 06. 객체지향 프로그래밍과 클래스","date":"July 2, 2019","excerpt":"객체지향은 프로그램 설계방법론중 하나 이다. 프로그램을 수많은 '객체'라는 기본 단위로 나누고 이 객체들의 상호작용으로 서술하는 방식이다.","thumbnail":"java/java-06-thumbnail.jpg","category":"java"}},{"id":"e34f7301-aa3c-5fa8-b64c-f0e3f5bb0150","frontmatter":{"slug":"java05","title":"JAVA - 05. 제어문","date":"June 28, 2019","excerpt":"조건식을 만족하느냐 아니냐에 따라 프로그램의 실행을 제어할 수 있는 문법이다. 이 때 조건식은 true나 false 같은 boolean형 타입을 반환할 수 있는 식을 말한다. 자바 문법 중에서 조건문은 if, switch, 조건연산자등이 있다.","thumbnail":"java/java-05-thumbnail.jpg","category":"java"}},{"id":"72354389-582a-5505-b65d-3c9a5b3ca855","frontmatter":{"slug":"java04","title":"JAVA - 04. 연산자","date":"June 27, 2019","excerpt":"어떠한 기능 또는 어떤 대상체에 계산과 같은 처리를 수행하는 문자 또는 기호를 연산자라 한다. Java에서의 연산자는 크게 단항, 이항, 삼항, 대입 연산자로 나뉘며, 이항 연산자는 산술, 비교, 논리 연산자로 나뉠 수 있다.","thumbnail":"java/java-04-thumbnail.jpg","category":"java"}},{"id":"a01f9150-953d-5139-9cbb-ac91be6d764e","frontmatter":{"slug":"java03","title":"JAVA - 03. 상수와 형변환","date":"June 26, 2019","excerpt":"자바의 일반적인 상수는 변수를 선언할 때 final이라는 선언을 추가하면 그 변수는 '상수'가 된다. 그리고 상수는 다음과 같은 특징이 있다.","thumbnail":"java/java-03-thumbnail.jpg","category":"java"}},{"id":"e64d7d89-e90f-58bb-96c6-a86d66495b0c","frontmatter":{"slug":"java02","title":"JAVA - 02. 변수와 자료형","date":"June 24, 2019","excerpt":"변수(Variable)란? 변수란 데이터의 저장과 참조를 위해 할당된 메모리 공간 에 붙인 이름을 말한다. 변하는 값을 프로그램에서 나타내는 방법","thumbnail":"java/java-02-thumbnail.jpg","category":"java"}},{"id":"55af9748-58f2-520b-9877-4db32daca44d","frontmatter":{"slug":"java01","title":"JAVA - 01. 자바 시작하기","date":"June 21, 2019","excerpt":"오늘부터 자바에 대해서 포스팅을 시작하겠다. 자바는 수많은 프로그래밍 언어중 하나이다. 먼저 프로그래밍 언어에 대한 정의를 하려고 한다.","thumbnail":"java/java-01-cover.jpg","category":"java"}}]}}}